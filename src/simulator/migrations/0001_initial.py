# Generated by Django 4.1.3 on 2022-12-30 17:06

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("winds", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DesignOfExperiments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("placeholder", models.IntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SimTrial",
            fields=[
                ("created_at", models.DateTimeField(auto_now=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("m", models.FloatField(default=0.0456)),
                ("g", models.FloatField(default=-9.81)),
                ("drag_coef", models.FloatField(default=0)),
                (
                    "prob_speed_fn_name",
                    models.CharField(
                        choices=[
                            ("Uniform", "Uniform"),
                            ("Normal", "Normal"),
                            ("Log-normal", "Log-normal"),
                        ],
                        max_length=50,
                    ),
                ),
                ("max_initial_speed", models.FloatField(null=True)),
                ("prob_speed_center", models.FloatField(null=True)),
                ("prob_speed_spread", models.FloatField(null=True)),
                (
                    "prob_timing_fn_name",
                    models.CharField(
                        choices=[
                            ("Uniform", "Uniform"),
                            ("Normal", "Normal"),
                            ("Log-normal", "Log-normal"),
                        ],
                        max_length=50,
                    ),
                ),
                ("max_wait_time", models.FloatField(null=True)),
                ("prob_timing_center", models.FloatField(null=True)),
                ("prob_timing_spread", models.FloatField(null=True)),
                (
                    "prob_aiming_fn_name",
                    models.CharField(
                        choices=[
                            ("Uniform", "Uniform"),
                            ("Normal", "Normal"),
                            ("Log-normal", "Log-normal"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "prob_aiming_geometry",
                    models.CharField(
                        choices=[
                            ("EulerAngles", "EulerAngles"),
                            ("Spherical", "Spherical"),
                            ("Cylindrical", "Cylindrical"),
                        ],
                        max_length=50,
                    ),
                ),
                ("prob_aiming_X1_min", models.FloatField(null=True)),
                ("prob_aiming_X1_max", models.FloatField(null=True)),
                ("prob_aiming_X1_center", models.FloatField(null=True)),
                ("prob_aiming_X1_spread", models.FloatField(null=True)),
                ("prob_aiming_X2_min", models.FloatField(null=True)),
                ("prob_aiming_X2_max", models.FloatField(null=True)),
                ("prob_aiming_X2_center", models.FloatField(null=True)),
                ("prob_aiming_X2_spread", models.FloatField(null=True)),
                ("prob_aiming_X3_min", models.FloatField(null=True)),
                ("prob_aiming_X3_max", models.FloatField(null=True)),
                ("prob_aiming_X3_center", models.FloatField(null=True)),
                ("prob_aiming_X3_spread", models.FloatField(null=True)),
                ("timestep", models.FloatField()),
                ("time_initial", models.FloatField()),
                (
                    "direction_initial",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(), max_length=3, size=None
                    ),
                ),
                ("speed_initial", models.FloatField()),
                ("blob_filename", models.CharField(max_length=50, null=True)),
                (
                    "windgenparams",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="winds.windgenparams",
                    ),
                ),
                (
                    "windspacetime",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="winds.windspacetime",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SimExperiment",
            fields=[
                ("created_at", models.DateTimeField(auto_now=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("m", models.FloatField(default=0.0456)),
                ("g", models.FloatField(default=-9.81)),
                ("drag_coef", models.FloatField(default=0)),
                (
                    "prob_speed_fn_name",
                    models.CharField(
                        choices=[
                            ("Uniform", "Uniform"),
                            ("Normal", "Normal"),
                            ("Log-normal", "Log-normal"),
                        ],
                        max_length=50,
                    ),
                ),
                ("max_initial_speed", models.FloatField(null=True)),
                ("prob_speed_center", models.FloatField(null=True)),
                ("prob_speed_spread", models.FloatField(null=True)),
                (
                    "prob_timing_fn_name",
                    models.CharField(
                        choices=[
                            ("Uniform", "Uniform"),
                            ("Normal", "Normal"),
                            ("Log-normal", "Log-normal"),
                        ],
                        max_length=50,
                    ),
                ),
                ("max_wait_time", models.FloatField(null=True)),
                ("prob_timing_center", models.FloatField(null=True)),
                ("prob_timing_spread", models.FloatField(null=True)),
                (
                    "prob_aiming_fn_name",
                    models.CharField(
                        choices=[
                            ("Uniform", "Uniform"),
                            ("Normal", "Normal"),
                            ("Log-normal", "Log-normal"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "prob_aiming_geometry",
                    models.CharField(
                        choices=[
                            ("EulerAngles", "EulerAngles"),
                            ("Spherical", "Spherical"),
                            ("Cylindrical", "Cylindrical"),
                        ],
                        max_length=50,
                    ),
                ),
                ("prob_aiming_X1_min", models.FloatField(null=True)),
                ("prob_aiming_X1_max", models.FloatField(null=True)),
                ("prob_aiming_X1_center", models.FloatField(null=True)),
                ("prob_aiming_X1_spread", models.FloatField(null=True)),
                ("prob_aiming_X2_min", models.FloatField(null=True)),
                ("prob_aiming_X2_max", models.FloatField(null=True)),
                ("prob_aiming_X2_center", models.FloatField(null=True)),
                ("prob_aiming_X2_spread", models.FloatField(null=True)),
                ("prob_aiming_X3_min", models.FloatField(null=True)),
                ("prob_aiming_X3_max", models.FloatField(null=True)),
                ("prob_aiming_X3_center", models.FloatField(null=True)),
                ("prob_aiming_X3_spread", models.FloatField(null=True)),
                ("timestep", models.FloatField()),
                ("is_control", models.BooleanField(default=False)),
                ("simtrials", models.ManyToManyField(to="simulator.simtrial")),
                (
                    "windgenparams",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="winds.windgenparams",
                    ),
                ),
                (
                    "windspacetime",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="winds.windspacetime",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
